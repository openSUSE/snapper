# Leap and Tumbleweed images differ only in the base image,
# so use a parametrized Dockerfile. See
# https://docs.docker.com/engine/reference/builder/#from
ARG BUILD_FLAVOR
ARG DOCKER_TAG

# Build the latest openSUSE Tumbleweed or Leap image
FROM opensuse/${BUILD_FLAVOR}:${DOCKER_TAG}

# this one needs to be defined after "FROM" so the value is available in "RUN" later
ARG YAST_REPO

# the NON-OSS repo is not needed, save the network bandwidth and some time (~5 seconds) for each refresh
RUN zypper mr -d repo-non-oss

# we need to install Ruby first to define the %{rb_ver} RPM macro
# see https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run
# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#/build-cache
# why we need "zypper clean -a" at the end
RUN zypper --non-interactive in --no-recommends --force-resolution util-linux ruby && zypper clean -a

# add the YaST repository - we need rubygem-coveralls-lcov
RUN zypper ar -f http://download.opensuse.org/repositories/YaST:/Head/${YAST_REPO}/ yast
RUN RUBY_VERSION=ruby:`rpm --eval '%{rb_ver}'` && \
  zypper --non-interactive --gpg-auto-import-keys \
  in --no-recommends \
  "rubygem($RUBY_VERSION:coveralls-lcov)" \
  && zypper clean -a

RUN RUBY_VERSION=ruby:`rpm --eval '%{rb_ver}'` && \
  zypper --non-interactive in --no-recommends \
  acl \
  autoconf \
  automake \
  dbus-1-devel \
  docbook-xsl-stylesheets \
  e2fsprogs-devel \
  gcc-c++ \
  git-core \
  grep \
  lcov \
  libacl-devel \
  libboost_system-devel \
  libboost_test-devel \
  libboost_thread-devel \
  libbtrfs-devel \
  libjson-c-devel \
  libmount-devel \
  libtool \
  libxml2-devel \
  libxslt \
  obs-service-source_validator \
  pam-devel \
  perl-JSON \
  rpm-build \
  "rubygem($RUBY_VERSION:ruby-dbus)" \
  which

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY . /usr/src/app
